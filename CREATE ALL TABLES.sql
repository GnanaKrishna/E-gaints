USE krishnadatabase;

CREATE TABLE IF NOT EXISTS ADDRESS_TYPE (
    ADDRESS_TYPE_ID INT AUTO_INCREMENT,
    description TEXT,
    PRIMARY KEY (ADDRESS_TYPE_ID)
);

CREATE TABLE IF NOT EXISTS USER_TYPE (
    USER_TYPE_ID INT AUTO_INCREMENT,
    description TEXT,
    PRIMARY KEY (USER_TYPE_ID)
);

CREATE TABLE IF NOT EXISTS ADDRESS (
    ADDRESS_ID INT AUTO_INCREMENT,
    ADDRESS_TYPE_ID INT NOT NULL,
    ADDRESS_1 VARCHAR(25),
    ADDRESS_2 VARCHAR(25),
    CITY VARCHAR(10),
    STATE VARCHAR(12),
    COUNTRY VARCHAR(20),
    ZIP CHAR(5),
    PRIMARY KEY (ADDRESS_ID),
    FOREIGN KEY (ADDRESS_TYPE_ID) REFERENCES ADDRESS_TYPE(ADDRESS_TYPE_ID)
);

CREATE TABLE IF NOT EXISTS USER (
    USER_ID INT AUTO_INCREMENT,
    FIRST_NAME VARCHAR(25),
    MIDDLE_NAME VARCHAR(25),
    LAST_NAME VARCHAR(25),
    BILLING_ADDRESS_ID INT NOT NULL,
	MAILING_ADDRESS_ID INT NOT NULL,
	PHYSICAL_ADDRESS_ID INT NOT NULL,
    PRIMARY KEY (USER_ID),
    FOREIGN KEY (BILLING_ADDRESS_ID) REFERENCES ADDRESS_TYPE(ADDRESS_TYPE_ID),
    FOREIGN KEY (MAILING_ADDRESS_ID) REFERENCES ADDRESS_TYPE(ADDRESS_TYPE_ID),
    FOREIGN KEY (PHYSICAL_ADDRESS_ID) REFERENCES ADDRESS_TYPE(ADDRESS_TYPE_ID)
);

CREATE TABLE IF NOT EXISTS AGENT (
    AGENT_ID INT AUTO_INCREMENT,
    USER_ID INT NOT NULL,
    EIN_NUMBER VARCHAR(10),
    OFFICE_ADDRESS_ID INT NOT NULL,
    PRIMARY KEY (AGENT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (OFFICE_ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE IF NOT EXISTS ORGANIZATION (
    ORGANIZATION_ID INT AUTO_INCREMENT,
    USER_ID INT NOT NULL,
    ORGANIZATION_NAME VARCHAR(20),
    EIN_NUMBER VARCHAR(10),
    ORGANIZATION_ADDRESS_ID INT NOT NULL,
    PRIMARY KEY (ORGANIZATION_ID),
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (ORGANIZATION_ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE IF NOT EXISTS REGISTRATION(
	REGISTRATION_ID INT NOT NULL,
    USER_NAME VARCHAR(20),
    EMAIL_ADDRESS VARCHAR(25),
    PHONE_NUMBER VARCHAR(10),
    USER_TYPE_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    PASSWORD VARCHAR(12),
    PRIMARY KEY (REGISTRATION_ID),
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (USER_TYPE_ID) REFERENCES USER_TYPE(USER_TYPE_ID)
);

CREATE TABLE IF NOT EXISTS TAX_PAYER(
	TAX_PAYER_ID INT NOT NULL,
	USER_ID INT NOT NULL,
    SSN VARCHAR(10),
    PRIMARY KEY (TAX_PAYER_ID),
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE IF NOT EXISTS BANK_ACCOUNT (
    BANK_ACCOUNT_ID INT AUTO_INCREMENT,
    TAX_PAYER_ID INT NOT NULL,
    BANK_NAME VARCHAR(20),
    BRANCH_NAME VARCHAR(20),
    ACCOUNT_NUMBER VARCHAR(20),
    BANK_ADDRESS_ID INT NOT NULL,
    ROUTING_NUMBER VARCHAR(20),
    PRIMARY KEY (BANK_ACCOUNT_ID),
    FOREIGN KEY (TAX_PAYER_ID) REFERENCES TAX_PAYER(TAX_PAYER_ID),
    FOREIGN KEY (BANK_ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE IF NOT EXISTS TAX_PAYER_DEPEDENT (
    TAX_PAYER_DEPEDENT_ID INT AUTO_INCREMENT,
    TAX_PAYER_ID INT NOT NULL,
    YEAR VARCHAR(4),
    MARITAL_STATUS VARCHAR(5),
    NUMBER_OF_DEPEDENT VARCHAR(3),
    DEPENDENT VARCHAR(5),
    DEPENDENT_TAX_PAYER_ID INT,
    PRIMARY KEY (TAX_PAYER_DEPEDENT_ID),
    FOREIGN KEY (TAX_PAYER_ID) REFERENCES TAX_PAYER(TAX_PAYER_ID),
    FOREIGN KEY (DEPENDENT_TAX_PAYER_ID) REFERENCES TAX_PAYER(TAX_PAYER_ID)
);

CREATE TABLE IF NOT EXISTS FEDRAL_TAX_TRANSANCTION (
    FEDRAL_TAX_TRANSANCTION_ID INT AUTO_INCREMENT,
    TAX_PAYER_ID INT NOT NULL,
    YEAR VARCHAR(4),
    FILER_TYPE_ID INT NOT NULL,
    FILER_USER_ID INT NOT NULL,
    N_TH_YEAR_OF_TAX_FILLING VARCHAR(2),
    ANNUAL_INCOME double,
    FEDRAL_TAX double,
    FEDRAL_TAX_PAID double,
    FEDRAL_DIFFERENCE double,
    FEDRAL_BANK_ACCOUNT_ID INT,
    PRIMARY KEY (FEDRAL_TAX_TRANSANCTION_ID),
    FOREIGN KEY (FILER_TYPE_ID) REFERENCES USER_TYPE(USER_TYPE_ID),
    FOREIGN KEY (FILER_USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (FEDRAL_BANK_ACCOUNT_ID) REFERENCES BANK_ACCOUNT(BANK_ACCOUNT_ID)
);

CREATE TABLE IF NOT EXISTS STATE_TAX_TRANSANCTION (
    STATE_TAX_TRANSANCTION_ID INT AUTO_INCREMENT,
    TAX_PAYER_ID INT NOT NULL,
    YEAR VARCHAR(4),
    FILER_TYPE_ID INT NOT NULL,
    FILER_USER_ID INT NOT NULL,
    N_TH_YEAR_OF_TAX_FILLING VARCHAR(2),
    STATE_NAME VARCHAR(12),
    STATE_CODE VARCHAR(12),
    ANNUAL_INCOME double,
    STATE_TAX double,
    STATE_TAX_PAID double,
    STATE_DIFFERENCE double,
    STATE_BANK_ACCOUNT_ID INT,
    PRIMARY KEY (STATE_TAX_TRANSANCTION_ID),
    FOREIGN KEY (FILER_TYPE_ID) REFERENCES USER_TYPE(USER_TYPE_ID),
    FOREIGN KEY (FILER_USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (STATE_BANK_ACCOUNT_ID) REFERENCES BANK_ACCOUNT(BANK_ACCOUNT_ID)
);



